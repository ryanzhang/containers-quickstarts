---
kind: Template
apiVersion: v1
metadata:
  name: Generic Jenkins Agent Template
  annotations:
    openshift.io/display-name: Generic Jenkins Agent Build Template
    description: "Generic build pod template pre-configured to use a jenkins agent in the
      same project/namespace"
objects:
{% if jenkins_slaves is defined %}
{% for agent, params in jenkins_slaves.build.items() %}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: {{ params.NAME | d('jenkins-slave-' + agent) }}
      role: jenkins-slave
    name: {{ params.NAME | d('jenkins-slave-' + agent) }}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: {{ params.NAME | d('jenkins-slave-' + agent) }}
      type: image
    name: {{ params.NAME | d('jenkins-slave-' + agent) }}
  spec:
    nodeSelector:
    output:
      to:
        kind: ImageStreamTag
        name: {{ params.NAME | d('jenkins-slave-' + agent) }}:{{ params.SLAVE_IMAGE_TAG | d('latest') }}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: {{ params.SOURCE_CONTEXT_DIR | d('jenkins-slaves/jenkins-slave-' + agent) }}
      git:
        ref: {{ params.SOURCE_REPOSITORY_REF | d(slave_repo_ref) | d('master') }}
        uri: {{ params.SOURCE_REPOSITORY_URL | d(repository_url) | d('https://github.com/redhat-cop/containers-quickstarts') }}
      type: Git
    strategy:
      dockerStrategy:
        buildArgs:
          - name: ca_cert
            value: "${CA_CERT}"
        dockerfilePath: {{ params.DOCKERFILE_PATH | d('Dockerfile') }}
{% if params.BUILDER_IMAGE_NAME is defined %}        
        from:
          kind: DockerImage
          name: {{ params.BUILDER_IMAGE_NAME }}
          imagePullPolicy: Always
{% endif %}
      type: Docker
    triggers:
    - type: ConfigChange
    - type: ImageChange
{% endfor %}
parameters:
  - name: CA_CERT
    displayName: SSL Fullchain Certificate in base64 format
    description: SSL Fullchain Certificate in base64 format
    value: ""
{% endif %}
